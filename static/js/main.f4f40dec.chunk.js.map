{"version":3,"sources":["page/landing/landing__form.module.css","components/Modal/index.module.css","page/landing/landing__allDone.module.css","components/Form/index.module.css","components/Button/index.module.css","components/Modal/index.tsx","components/Form/index.tsx","components/Button/index.tsx","utils/formValidation.ts","endpoints/landing__invite.ts","page/landing/landing__form.tsx","tests/_setup.tsx","page/landing/landing__allDone.tsx","page/landing/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Modal","show","children","showHideClassName","modalStyles","container","displayBlock","displayNone","useEffect","document","body","style","position","top","window","scrollY","className","main","Form","name","handleSubmit","childrenRef","useRef","useState","inputErrors","setInputErrors","formStyles","onSubmit","e","preventDefault","inputsValid","newErrors","Object","entries","current","key","obj","validationFunc","ref","error","value","values","filter","length","validateFormInputs","inputValues","noValidate","register","loading","Button","rest","styles","btn","landingInviteDataFactory","data","landingInviteData","email","postLandingForm","fetch","method","headers","JSON","stringify","then","response","json","catch","console","LandingPageForm","onSuccess","emailRef","confirmEmailRef","emailsMatch","setEmailsMatch","sendingForm","setSendingForm","serverError","setServerError","validateEmail","str","test","String","toLowerCase","validateFullName","validateEmailsMatch","str1","str2","handleLandingPageFormSubmit","a","match","payload","res","errorMessage","landingFormContainer","landingFormHeader","landingFormHeading","landingFormHR","landingFormInput","landingFormInputError","type","placeholder","undefined","landingFormButton","disabled","landingFormServerError","AllDone","onConfirm","allDoneContainer","allDoneBody","allDoneParagraph","onClick","LandingPage","showFormModal","setShowFormModal","showDoneModal","setShowDoneModal","closeDoneModal","onClose","App","Date","getFullYear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4f40dec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"landingFormContainer\":\"landing__form_landingFormContainer__LAl4G\",\"landingFormHeader\":\"landing__form_landingFormHeader__3x6pP\",\"landingFormHeading\":\"landing__form_landingFormHeading__EljeE\",\"landingFormHR\":\"landing__form_landingFormHR__Ar1hg\",\"landingFormInput\":\"landing__form_landingFormInput__842sb\",\"landingFormInputError\":\"landing__form_landingFormInputError__2qdNI\",\"landingFormButton\":\"landing__form_landingFormButton__2wgz5\",\"landingFormServerError\":\"landing__form_landingFormServerError__qj7MX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Modal_container__Htkvf\",\"displayBlock\":\"Modal_displayBlock__32Y--\",\"displayNone\":\"Modal_displayNone__3ltqY\",\"main\":\"Modal_main__1gpFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allDoneContainer\":\"landing__allDone_allDoneContainer__3V396\",\"allDoneBody\":\"landing__allDone_allDoneBody__3KwTc\",\"allDoneParagraph\":\"landing__allDone_allDoneParagraph__3CZCp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container__3mMOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__240y8\"};","import React, { useEffect } from \"react\";\nimport modalStyles from './index.module.css';\n\ninterface ModalInterface {\n  show: boolean;\n  children: React.ReactElement;\n  onClose: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nexport function Modal({ show, children }: ModalInterface) {\n  const showHideClassName = show ? `${modalStyles.container} ${modalStyles.displayBlock}` : `${modalStyles.container} ${modalStyles.displayNone}`;\n  useEffect(() => {\n    if (show) {\n      document.body.style.position = 'fixed';\n      document.body.style.top = `-${window.scrollY}px`;\n    } else {\n      // When the modal is hidden, we want to remain at the top of the scroll position\n      document.body.style.position = '';\n      document.body.style.top = '';\n    }\n  }, [show]);\n  return (\n    show ? (\n      <div className={showHideClassName}>\n        <section className={modalStyles.main}>\n          {children}\n        </section>\n      </div>\n    ) : null\n  );\n}\n\nexport default Modal;\n","import React, { useRef, useState } from 'react';\nimport formStyles from './index.module.css';\ninterface FormInterface {\n  name: string;\n  handleSubmit: (inputsValid: boolean, inputValues: { [key: string]: string }) => any;\n  children: (props: any) => React.ReactElement;\n}\n\nexport function Form({ children, name, handleSubmit }: FormInterface) {\n  const childrenRef = useRef<{ [key: string]: any }>({});\n  const [inputErrors, setInputErrors] = useState<{ [key: string]: any }>({});\n\n  function submitHandler(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n    const inputsValid = validateFormInputs();\n    const inputValues: { [key: string]: string } = {};\n    for (const [key, obj] of Object.entries(childrenRef.current)) {\n      inputValues[key] = obj.ref.value;\n    }\n    handleSubmit(inputsValid, inputValues);\n  }\n\n  function validateFormInputs() {\n    const newErrors = inputErrors;\n    for (const [key, obj] of Object.entries(childrenRef.current)) {\n      const { validationFunc, ref } = obj;\n      if (validationFunc) {\n        const { error } = validationFunc(ref.value);\n        newErrors[key] = error;\n      } else {\n        newErrors[key] = null;\n      }\n    }\n\n    setInputErrors({\n      ...newErrors,\n    });\n\n    return Object.values(newErrors).filter((e) => e !== null).length === 0;\n  }\n\n  function register(ref: HTMLFormElement, name: string, validationFunc: (str: string) => any) {\n    childrenRef.current[name] = {\n      ref,\n      validationFunc,\n    };\n  }\n\n  return (\n    <form\n      className={formStyles.container}\n      onSubmit={submitHandler}\n      noValidate\n      name={name}\n    >\n      {children({\n        inputErrors,\n        register,\n        loading: false,\n      })}\n    </form>\n  );\n}\n\nexport default Form;","import React from \"react\";\nimport styles from './index.module.css';\n\ninterface ButtonInterface {\n  children: React.ReactElement;\n  className?: string;\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\n  disabled?: boolean;\n}\n\nexport function Button({ children, className, ...rest }: ButtonInterface) {\n  return (\n    <button {...rest} className={`${styles.btn} ${className}`}>{children}</button>\n  );\n}\n\nexport default Button;","export function stringsMatch(str1: string, str2: string): boolean {\n  return str1 === str2;\n}\n\n\nexport function isEmailValid(email: string): boolean {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nexport const NAME_MIN_LENGTH = 3;","export const LANDING_INVITE_URL = 'https://l94wc2001h.execute-api.ap-southeast-2.amazonaws.com/prod/fake-auth';\n\nexport interface LandingFormRequestBody {\n  name: string;\n  email: string;\n}\n\nexport const landingInviteDataFactory = (data: { [key: string]: any }): LandingFormRequestBody => {\n  const landingInviteData = {\n    name: '',\n    email: '',\n  };\n  landingInviteData.name = data.name;\n  landingInviteData.email = data.email;\n  return landingInviteData;\n}\n\nexport const postLandingForm = (data: LandingFormRequestBody): Promise<any> => {\n  return fetch(LANDING_INVITE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n    .then(response => response.json())\n    .then(data => {\n      return data;\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n}\n","import React, { useRef, useState } from \"react\";\nimport Form from \"../../components/Form\";\nimport Button from \"../../components/Button\";\nimport { isEmailValid, stringsMatch, NAME_MIN_LENGTH } from \"../../utils/formValidation\";\nimport { landingInviteDataFactory } from \"../../endpoints/landing__invite\";\nimport {\n  LANDING_FORM_TEST_ID,\n  LANDING_FORM_INPUT_CONFIRM_EMAIL_TEST_ID,\n  LANDING_FORM_INPUT_EMAIL_TEST_ID,\n  LANDING_FORM_INPUT_FULLNAME_TEST_ID,\n  LANDING_FORM_SUBMIT_BUTTON_TEST_ID,\n} from '../../tests/_setup';\nimport styles from './landing__form.module.css';\nimport { LandingFormRequestBody } from '../../endpoints/landing__invite';\n\ninterface LandingPageFormInterface {\n  onSuccess: () => void;\n  postLandingForm: (data: LandingFormRequestBody) => Promise<any>;\n}\n\nexport function LandingPageForm({ onSuccess, postLandingForm }: LandingPageFormInterface) {\n  const emailRef = useRef<HTMLInputElement | null>();\n  const confirmEmailRef = useRef<HTMLInputElement | null>();\n  const [emailsMatch, setEmailsMatch] = useState<boolean | undefined>();\n  const [sendingForm, setSendingForm] = useState<boolean | undefined>();\n  const [serverError, setServerError] = useState<string | null>(null);\n\n  const validateEmail = (str: string) => {\n    const isValid = isEmailValid(str);\n    return {\n      error: isValid ? null : 'email format incorrect',\n    }\n  };\n\n  const validateFullName = (str: string) => {\n    const isValid = str.length >= NAME_MIN_LENGTH;\n\n    return {\n      error: isValid ? null : 'Name needs to be at least 3 characters long'\n    }\n  };\n\n  const validateEmailsMatch = () => {\n    const isValid = stringsMatch(emailRef.current?.value || '', confirmEmailRef.current?.value || '');\n    return isValid;\n  }\n\n  const handleLandingPageFormSubmit = async (inputsValid: boolean, inputValues: { [key: string]: string }) => {\n    setServerError(null);\n    const match = validateEmailsMatch();\n    setEmailsMatch(match);\n    if (!inputsValid || !match) return;\n    const payload = landingInviteDataFactory(inputValues);\n    setSendingForm(true);\n    const res = await postLandingForm(payload);\n    setSendingForm(false);\n    // fail: {errorMessage: 'Bad Request: Email is already in use'}\n    if (typeof res === 'object') {\n      setServerError(res.errorMessage);\n    }\n    // success: Registered\n    onSuccess();\n  };\n\n  return (\n    <Form name=\"landingPageForm\" handleSubmit={handleLandingPageFormSubmit}>\n      {({ inputErrors, register }: any) => {\n        // form content\n        return (\n          <div className={styles.landingFormContainer} data-testid={LANDING_FORM_TEST_ID}>\n            <div className={styles.landingFormHeader}>\n              <h1 className={styles.landingFormHeading}>Request an invite</h1>\n              <hr className={styles.landingFormHR} />\n            </div>\n            <fieldset className=\"form-fieldset\">\n              <input\n                className={`${styles.landingFormInput} ${inputErrors[\"name\"] && styles.landingFormInputError}`}\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Full name\"\n                data-testid={LANDING_FORM_INPUT_FULLNAME_TEST_ID}\n                ref={(ref) => register(ref, 'name', validateFullName)} />\n              <div>{inputErrors[\"name\"] && inputErrors[\"name\"]}</div>\n            </fieldset>\n            <fieldset className=\"form-fieldset\">\n              <input\n                className={`${styles.landingFormInput} ${inputErrors[\"email\"] && styles.landingFormInputError}`}\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                data-testid={LANDING_FORM_INPUT_EMAIL_TEST_ID}\n                ref={(ref) => {\n                  emailRef.current = ref;\n                  register(ref, 'email', validateEmail)\n                }}\n              />\n              <div>{inputErrors[\"email\"] && inputErrors[\"email\"]}</div>\n            </fieldset>\n            <fieldset className=\"form-fieldset\">\n              <input\n                className={`${styles.landingFormInput} ${inputErrors[\"confirmEmail\"] && styles.landingFormInputError}`}\n                name=\"confirmEmail\"\n                type=\"email\"\n                placeholder=\"Confirm email\"\n                data-testid={LANDING_FORM_INPUT_CONFIRM_EMAIL_TEST_ID}\n                ref={(ref) => {\n                  confirmEmailRef.current = ref;\n                  register(ref, 'confirmEmail', validateEmail);\n                }}\n              />\n              <div>{inputErrors[\"confirmEmail\"] && inputErrors[\"confirmEmail\"]}</div>\n              {emailsMatch !== undefined && <div>{!emailsMatch && \"emails do not match\"}</div>}\n            </fieldset>\n            <fieldset className=\"form-submit-fieldset\">\n              <Button\n                className={styles.landingFormButton}\n                disabled={sendingForm}\n                data-testid={LANDING_FORM_SUBMIT_BUTTON_TEST_ID}\n              >\n                <span>{sendingForm ? 'Sending, please wait...' : 'Send'}</span>\n              </Button>\n              <div className={styles.landingFormServerError}>{serverError}</div>\n            </fieldset>\n          </div>\n        )\n      }}\n    </Form>\n  );\n}\n\nexport default LandingPageForm;","export const INVITE_BUTTON_TEST_ID = \"invite-button-test-id\";\nexport const LANDING_FORM_TEST_ID = \"landing-form-test-id\";\nexport const LANDING_FORM_INPUT_FULLNAME_TEST_ID = \"landing-form-input-fullname-test-id\";\nexport const LANDING_FORM_INPUT_EMAIL_TEST_ID = \"landing-form-input-email-test-id\";\nexport const LANDING_FORM_INPUT_CONFIRM_EMAIL_TEST_ID = \"landing-form-input-confirmEmail-test-id\";\nexport const LANDING_FORM_SUBMIT_BUTTON_TEST_ID = \"landing-form-submit-button-test-id\";","import React from 'react';\nimport styles from './landing__allDone.module.css';\nimport formStyles from './landing__form.module.css';\nimport Button from '../../components/Button';\n\n\ninterface AllDoneInterface {\n  onConfirm: (e: React.MouseEvent<HTMLElement>) => void\n}\n\nexport function AllDone({ onConfirm }: AllDoneInterface) {\n  return (\n    <div className={styles.allDoneContainer} data-testid=\"landing-alldone\">\n      <div className={formStyles.landingFormHeader}>\n        <h1 className={formStyles.landingFormHeading}>All done!</h1>\n        <hr className={formStyles.landingFormHR} />\n      </div>\n      <div className={styles.allDoneBody}>\n        <p className={styles.allDoneParagraph}>You will be one of the first to experience</p>\n        <p className={styles.allDoneParagraph}>Broccoli & Co. when we launch.</p>\n      </div>\n      <Button className={formStyles.landingFormButton} onClick={onConfirm}>\n        <span>OK</span>\n      </Button>\n    </div>\n  );\n}\n\nexport default AllDone;","import React, { useState } from \"react\";\nimport Modal from \"../../components/Modal\";\nimport LandingPageForm from \"./landing__form\";\nimport AllDone from \"./landing__allDone\";\nimport Button from \"../../components/Button\";\nimport { INVITE_BUTTON_TEST_ID } from '../../tests/_setup';\n\nexport function LandingPage({ postLandingForm }: any) {\n  const [showFormModal, setShowFormModal] = useState(false);\n  const [showDoneModal, setShowDoneModal] = useState(false);\n\n  const openFormModal = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    setShowFormModal(true);\n  }\n\n  const closeFormModal = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    setShowFormModal(false);\n  }\n\n  const closeDoneModal = (e: React.MouseEvent<HTMLElement>) => {\n    e.preventDefault();\n    setShowDoneModal(false);\n  }\n\n  const onLandingFormSuccess = () => {\n    setShowFormModal(false);\n    setShowDoneModal(true);\n  }\n\n  return (\n    <>\n      <div>\n        <h1 className=\"landing__heading\">A better way</h1>\n        <h1 className=\"landing__heading\">to enjoy every day.</h1>\n        <p className=\"landing__subheading\">Be the first to know when we launch.</p>\n        <Button onClick={openFormModal} data-testid={INVITE_BUTTON_TEST_ID}>\n          <span>Request an invite</span>\n        </Button>\n      </div>\n      <Modal show={showFormModal} onClose={closeFormModal}>\n        <LandingPageForm onSuccess={onLandingFormSuccess} postLandingForm={postLandingForm} />\n      </Modal>\n      <Modal show={showDoneModal} onClose={closeDoneModal}>\n        <AllDone onConfirm={closeDoneModal} />\n      </Modal>\n    </>\n  );\n}\n\nexport default LandingPage;","import React from \"react\";\nimport LandingPage from \"./page/landing\";\nimport { postLandingForm } from \"./endpoints/landing__invite\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <header className=\"app__header\">BROCCOLI & CO.</header>\n      <main className=\"app__body\">\n        <LandingPage postLandingForm={postLandingForm} />\n      </main>\n      <footer className=\"app__footer\">\n        <p className=\"app__footer__p\">Made with ♥ in Melbourne.</p>\n        <p className=\"app__footer__p\">© {new Date().getFullYear()} Broccoli & Co. All rights reserved.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}